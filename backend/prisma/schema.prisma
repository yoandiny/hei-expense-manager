// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int        @id @default(autoincrement())
  email      String     @unique
  password   String
  expenses   Expense[]
  incomes    Income[]
  categories Category[]
  createdAt  DateTime   @default(now())
}

model Expense {
  id          Int         @id @default(autoincrement())
  amount      Float
  description String? // optionnel
  type        ExpenseType @default(ONE_TIME)
  date        DateTime? // utilisé si One-time
  startDate   DateTime? // utilisé si Recurring
  endDate     DateTime? // optionnel pour Recurring
  receiptUrl  String? // chemin/fichier uploadé
  createdAt   DateTime    @default(now())

  // Relations
  userId     Int
  user       User     @relation(fields: [userId], references: [id])
  categoryId Int
  category   Category @relation(fields: [categoryId], references: [id])
}

enum ExpenseType {
  ONE_TIME
  RECURRING
}

model Income {
  id          Int      @id @default(autoincrement())
  amount      Float
  date        DateTime
  source      String
  description String? // optionnel
  createdAt   DateTime @default(now())

  // Relation avec User
  userId Int
  user   User @relation(fields: [userId], references: [id])
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String
  isDefault Boolean  @default(false) // pour savoir si c’est une catégorie système
  createdAt DateTime @default(now())

  // Relations
  userId   Int? // null = catégorie par défaut globale
  user     User?     @relation(fields: [userId], references: [id])
  expenses Expense[]
}
